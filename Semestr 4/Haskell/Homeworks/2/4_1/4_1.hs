-- Черняков Никита А3201

-- Задание:
-- Назовем “производной” элемента числового списка разность между следующим в списке и данным элементом.
-- Производной последнего элемента будем считать 0.
-- Например, список производных элементов списка [3,1,2,5,7,6] будет список [-2,1,3,2,-1,0].
-- Написать функцию maxDeriv :: Real a => [a] -> Int,
-- которая в заданном списке числовых элементов находит индекс элемента с максимальной “производной”.
-- Например, в вышеприведенном списке таким индексом будет 2, поскольку элемент с этим индексом имеет максимальную производную - 3.

module Homework where

-- Алгоритм:
-- Для решения задачи я делаю следующее:
-- 1) Нахожу производную списка с помощью функции difList (описана ниже)
-- 2) Нумерую каждый элемент полученного списка индексом (т.е. создаю список пар (значение, индекс))
--      с помощью метода zip (Очень понравился способ объединить с бесконечным списком от 0 до бесконечности)
-- 3) Нахожу максимальную пару в этом списке с помощью метода maximum (стандартная)
--      (Так как пара у меня вида (значение, индекс), то ищет максимум сначала он по первому элементу пары, т.е. по "значению", что мне и нужно)
-- 4) Из найденной максимальной пары берем второй жлемент с помощью функции snd (стандартная)
--      (Т.к. во втором элементе пары как раз расположен индекс этой пары в списке)

maxDeriv :: Real a => [a] -> Int
maxDeriv list = snd $ maximum $ zip (difList list) [0..]

-- Функция difList находит "производную" списка:
-- 1) Объединяем в пару наш список с хвостом списка (без первого элемента список) с помощью zip
--      (Т.е. у нас будет список пар (элемент, следующий элемент), но последнего элемента там не будет, т.к. ему нет следующего элемента)
-- 2) Преобразуем список пар в список, где каждый элемент равен разнице второго и первого элементов пары, с помощью map
--      (Т.е. получаю список производных кроме последнего элемента)
-- 3) Добавляю последний элемент (т.е. 0) в конец списка с помощью (++)
--      (Более быстрого и красивого способа сделать это не придумал :с)
    
difList list = map (\(x,y) -> y - x) (zip list (tail list)) ++ [0]

-- Тесты
main =  [
        maxDeriv [5,3,2,1] == 3,
        maxDeriv [3,1,2,5,7,6] == 2,
        maxDeriv [1,2,6,2,4,5] == 1,
        maxDeriv [1,1,1,1] == 3,
        maxDeriv [1] == 0
        ]
